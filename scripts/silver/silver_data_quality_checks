/*
===============================================================================
Data Quality Checks: Bronze & Silver Tables
===============================================================================
Purpose: 
- Ensure data integrity for Customer, Product, and Sales Details tables.
- Identify and fix data quality issues in the Bronze layer before loading into Silver.
- Validate data correctness in Silver after transformation.
===============================================================================
*/

/*
===============================================================================
SECTION 1: CUSTOMER TABLE QUALITY CHECKS (crm_cust_info)
===============================================================================
*/

/* 
-----------------------------------------------------------------------------
Step 1.1: Data Quality Checks on Bronze Customer Table (Before Transformation)
-----------------------------------------------------------------------------
*/

-- ✅ Check for NULL values in critical columns before transformation
SELECT * FROM bronze.crm_cust_info 
WHERE cst_id IS NULL 
   OR cst_key IS NULL 
   OR cst_firstname IS NULL 
   OR cst_lastname IS NULL;

-- ✅ Check for unexpected values in marital status and gender
SELECT DISTINCT cst_marital_status FROM bronze.crm_cust_info;
-- Expected: 'S', 'M', NULL

SELECT DISTINCT cst_gndr FROM bronze.crm_cust_info;
-- Expected: 'M', 'F', NULL

-- ✅ Check for duplicate `cst_id` records in Bronze (Retain latest)
SELECT cst_id, COUNT(*) 
FROM bronze.crm_cust_info
GROUP BY cst_id
HAVING COUNT(*) > 1;

-- ✅ Check for future `cst_create_date` values
SELECT * FROM bronze.crm_cust_info 
WHERE cst_create_date > CURRENT_DATE;

/* 
-----------------------------------------------------------------------------
Step 1.2: Data Quality Checks on Silver Customer Table (After Transformation)
-----------------------------------------------------------------------------
*/

-- ✅ Check for NULL values in Silver (Should be cleaned)
SELECT * FROM silver.crm_cust_info 
WHERE cst_id IS NULL 
   OR cst_key IS NULL 
   OR cst_firstname IS NULL 
   OR cst_lastname IS NULL;

-- ✅ Validate transformed values for marital status and gender
SELECT DISTINCT cst_marital_status FROM silver.crm_cust_info;
-- Expected: 'Single', 'Married', 'n/a'

SELECT DISTINCT cst_gndr FROM silver.crm_cust_info;
-- Expected: 'Male', 'Female', 'n/a'

-- ✅ Verify duplicate customer records were removed
SELECT cst_id, COUNT(*) 
FROM silver.crm_cust_info
GROUP BY cst_id
HAVING COUNT(*) > 1;

/*
===============================================================================
SECTION 2: PRODUCT TABLE QUALITY CHECKS (crm_prd_info)
===============================================================================
*/

/* 
-----------------------------------------------------------------------------
Step 2.1: Data Quality Checks on Bronze Product Table (Before Transformation)
-----------------------------------------------------------------------------
*/

-- ✅ Check for NULL values in product details
SELECT * FROM bronze.crm_prd_info 
WHERE prd_id IS NULL 
   OR prd_key IS NULL 
   OR prd_nm IS NULL;

-- ✅ Validate product category values
SELECT DISTINCT prd_line FROM bronze.crm_prd_info;
-- Expected: 'M', 'R', 'S', 'T', NULL

-- ✅ Identify invalid product start/end dates
SELECT * FROM bronze.crm_prd_info 
WHERE prd_end_dt < prd_start_dt;

/* 
-----------------------------------------------------------------------------
Step 2.2: Data Quality Checks on Silver Product Table (After Transformation)
-----------------------------------------------------------------------------
*/

-- ✅ Check for NULL values in Silver Product Table
SELECT * FROM silver.crm_prd_info 
WHERE prd_id IS NULL 
   OR prd_key IS NULL 
   OR prd_nm IS NULL;

-- ✅ Validate transformed product line names
SELECT DISTINCT prd_line FROM silver.crm_prd_info;
-- Expected: 'Mountain', 'Road', 'Other Sales', 'Touring', 'Unknown'

-- ✅ Verify correct product start/end dates in Silver
SELECT * FROM silver.crm_prd_info 
WHERE prd_end_dt < prd_start_dt;

/*
===============================================================================
SECTION 3: SALES DETAILS TABLE QUALITY CHECKS (crm_sales_details)
===============================================================================
*/

/* 
-----------------------------------------------------------------------------
Step 3.1: Data Quality Checks on Bronze Sales Table (Before Transformation)
-----------------------------------------------------------------------------
*/

-- ✅ Check for NULL values in sales details before transformation
SELECT * FROM bronze.crm_sales_details 
WHERE sls_ord_num IS NULL 
   OR sls_prd_key IS NULL 
   OR sls_cust_id IS NULL 
   OR sls_order_dt IS NULL
   OR sls_sales IS NULL
   OR sls_quantity IS NULL
   OR sls_price IS NULL;

-- ✅ Validate that `sls_prd_key` exists in the Silver Product Table
SELECT sls_prd_key 
FROM bronze.crm_sales_details
WHERE sls_prd_key NOT IN (SELECT prd_key FROM silver.crm_prd_info);

-- ✅ Validate that `sls_cust_id` exists in the Silver Customer Table
SELECT sls_cust_id 
FROM bronze.crm_sales_details
WHERE sls_cust_id NOT IN (SELECT cst_id FROM silver.crm_cust_info);

-- ✅ Identify invalid sales order dates (Zeros, incorrect length, out-of-range)
SELECT sls_order_dt
FROM bronze.crm_sales_details
WHERE LENGTH(sls_order_dt) != 8 
   OR sls_order_dt <= 0
   OR sls_order_dt > 20500101
   OR sls_order_dt < 19000101;

-- ✅ Ensure order date (`sls_order_dt`) is earlier than ship/due date
SELECT * 
FROM bronze.crm_sales_details
WHERE sls_order_dt > sls_ship_dt 
   OR sls_order_dt > sls_due_dt;

-- ✅ Identify incorrect sales calculations (Sales ≠ Quantity * Price)
SELECT 
    sls_sales,
    sls_quantity,
    sls_price
FROM bronze.crm_sales_details
WHERE sls_sales != sls_quantity * sls_price
   OR sls_sales IS NULL 
   OR sls_quantity IS NULL 
   OR sls_price IS NULL
   OR sls_sales <= 0 
   OR sls_quantity <= 0 
   OR sls_price <= 0;

/* 
-----------------------------------------------------------------------------
Step 3.2: Data Quality Checks on Silver Sales Table (After Transformation)
-----------------------------------------------------------------------------
*/

-- ✅ Check for NULL values in Silver after transformation
SELECT * 
FROM silver.crm_sales_details
WHERE sls_ord_num IS NULL 
   OR sls_prd_key IS NULL 
   OR sls_cust_id IS NULL 
   OR sls_order_dt IS NULL
   OR sls_sales IS NULL
   OR sls_quantity IS NULL
   OR sls_price IS NULL;

-- ✅ Validate transformed date formats in Silver
SELECT sls_order_dt 
FROM silver.crm_sales_details 
WHERE sls_order_dt NOT BETWEEN '1900-01-01' AND CURRENT_DATE;

-- ✅ Verify that all negative or incorrect sales and prices were corrected
SELECT * 
FROM silver.crm_sales_details
WHERE sls_sales <= 0 
   OR sls_quantity <= 0 
   OR sls_price < 0;

-- ✅ Ensure final sales calculation is correct (Sales = Quantity * Price)
SELECT * 
FROM silver.crm_sales_details
WHERE sls_sales != sls_quantity * ABS(sls_price);
